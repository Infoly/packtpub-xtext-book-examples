/**
 * generated by Xtext
 */
package org.example.smalljava.ui.outline;

import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;
import org.example.smalljava.smallJava.SJClass;
import org.example.smalljava.smallJava.SJMethod;
import org.example.smalljava.smallJava.SJProgram;

/**
 * Customization of the default outline structure.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
@SuppressWarnings("all")
public class SmallJavaOutlineTreeProvider extends DefaultOutlineTreeProvider {
  public boolean _isLeaf(final SJMethod m) {
    return true;
  }
  
  public void _createChildren(final DocumentRootNode outlineNode, final SJProgram model) {
    EList<SJClass> _classes = model.getClasses();
    final Procedure1<SJClass> _function = new Procedure1<SJClass>() {
      @Override
      public void apply(final SJClass cl) {
        SmallJavaOutlineTreeProvider.this.createNode(outlineNode, cl);
      }
    };
    IterableExtensions.<SJClass>forEach(_classes, _function);
  }
}
